name: OWASP ZAP Scan

on:
  push:
    branches:
      - main

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Verify the rules file
      - name: Verify Rules File
        run: ls -l .github/workflows/

      - name: Debug Rules File
        run: cat .github/workflows/rules.zap

      # Step 3: Run OWASP ZAP Full Scan
      - name: Run OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'https://mlshoppreprod.mlhuillier.com/jewelryback/Account/OrderDetails?OrderNumber=MLMDKEXTVBL&OrderId=O20241007135949882172'
          rules_file_name: '.github/workflows/rules.zap'
          artifact_name: zap_scan  # Ensure this matches the download step

      # Step 4: List available artifacts (for debugging)
      - name: List Artifacts
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | jq '.artifacts[] | .name'

      # Step 5: Download Artifact (zap_scan)
      - name: Download ZAP Scan Artifact
        uses: actions/download-artifact@v3
        with:
          name: zap_scan  # Should match the artifact name in the previous step
          path: zap_scan/

      # Step 6: Install zap-cli for report generation
      - name: Install zap-cli
        run: |
          pip install zap-cli

      # Step 7: Filter and Generate Updated Report
      - name: Filter ZAP Scan Report
        run: |
          REPORT_FILE="zap_scan/report_json.json"
          FILTERED_REPORT="zap_scan/filtered_report.json"
          if [ -f "$REPORT_FILE" ]; then
            # Filter out ignored alerts
            jq 'del(.site[].alerts[] | select(.risk == "Low" and .confidence == "Low"))' "$REPORT_FILE" > "$FILTERED_REPORT"
            # Overwrite original report
            mv "$FILTERED_REPORT" "$REPORT_FILE"
          else
            echo "Original report file not found!"
            exit 1
          fi

      # Step 8: Generate HTML Report
      - name: Generate Filtered HTML Report
        run: |
          zap-cli report \
            -o zap_scan/filtered_report.html \
            -f html \
            -i zap_scan/report_json.json

      # Step 9: Upload Updated Reports
      - name: Upload Filtered Reports
        uses: actions/upload-artifact@v3
        with:
          name: zap_filtered_report
          path: zap_scan/
